apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hearthhub-ingress
  namespace: {{.Values.namespace}}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/websocket-services: {{.Values.name}}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - hearthhub.duckdns.org
      secretName: hearthhub-tls
  rules:
    - host: hearthhub.duckdns.org
      http:
        paths:
          - path: /api/v1
            pathType: Prefix
            backend:
              service:
                name: {{.Values.name}}
                port:
                  number: {{.Values.service.port}}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{.Values.frontendServiceName}}
                port:
                  number: {{.Values.service.port}}


